version: '3.8'

services:
  font-identifier:
    build: .
    container_name: font-identifier-app
    expose:
      - "8501"
    volumes:
      - ./recordings:/app/recordings
      - ./config:/app/config
      - ./app_users.db:/app/app_users.db
      - ./model.pth:/app/model.pth
      - logs:/app/logs
    environment:
      - DEBIAN_FRONTEND=noninteractive
      - TERM=xterm
      - PYTHONUNBUFFERED=1
      - STREAMLIT_SERVER_PORT=8501
      - STREAMLIT_SERVER_ADDRESS=0.0.0.0
      - STREAMLIT_SERVER_HEADLESS=true
      - STREAMLIT_SERVER_ENABLE_CORS=false
      - STREAMLIT_LOGGER_LEVEL=INFO
      - STREAMLIT_BROWSER_GATHER_USAGE_STATS=false
      - STREAMLIT_SERVER_ENABLE_WEBSOCKET_COMPRESSION=false
      - TORCH_HOME=/app/torch_cache
      - PYTORCH_ENABLE_MPS_FALLBACK=1
      - OMP_NUM_THREADS=1
      - DISPLAY=:99
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  nginx:
    image: nginx:alpine
    container_name: font-identifier-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/htpasswd:/etc/nginx/.htpasswd:ro
    depends_on:
      - font-identifier
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Optional: Database for production (if you want to use PostgreSQL instead of SQLite)
  postgres:
    image: postgres:13-alpine
    container_name: font-identifier-db
    environment:
      - POSTGRES_DB=font_identifier
      - POSTGRES_USER=app_user
      - POSTGRES_PASSWORD=${DB_PASSWORD:-change_me_in_production}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    profiles:
      - database

  # Optional: Redis for caching and session management
  redis:
    image: redis:6-alpine
    container_name: font-identifier-cache
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    restart: unless-stopped
    profiles:
      - cache

  # Optional: Monitoring with Prometheus and Grafana
  prometheus:
    image: prom/prometheus:latest
    container_name: font-identifier-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    restart: unless-stopped
    profiles:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: font-identifier-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    restart: unless-stopped
    profiles:
      - monitoring

volumes:
  recordings:
  config:
  logs:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  default:
    name: font-identifier-network
